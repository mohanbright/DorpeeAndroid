// Generated by view binder compiler. Do not edit!
package com.droid.dorpee.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.droid.dorpee.R;
import com.droid.dorpee.utils.ClickableViewPager;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemSearchResultBinding implements ViewBinding {
  @NonNull
  private final LinearLayoutCompat rootView;

  @NonNull
  public final ImageView imageViewNext;

  @NonNull
  public final ImageView imageViewSheild;

  @NonNull
  public final ClickableViewPager imageViewpager;

  @NonNull
  public final LinearLayoutCompat layour;

  @NonNull
  public final LinearLayoutCompat linearLayoutCompat9;

  @NonNull
  public final ConstraintLayout searchItem;

  @NonNull
  public final TextView textViewFree;

  @NonNull
  public final TextView textViewHotel;

  @NonNull
  public final TextView textViewHotelName;

  @NonNull
  public final TextView textViewPrice;

  @NonNull
  public final TextView textViewRating;

  @NonNull
  public final TextView textViewTotalSpace;

  @NonNull
  public final TextView textViewType;

  private ItemSearchResultBinding(@NonNull LinearLayoutCompat rootView,
      @NonNull ImageView imageViewNext, @NonNull ImageView imageViewSheild,
      @NonNull ClickableViewPager imageViewpager, @NonNull LinearLayoutCompat layour,
      @NonNull LinearLayoutCompat linearLayoutCompat9, @NonNull ConstraintLayout searchItem,
      @NonNull TextView textViewFree, @NonNull TextView textViewHotel,
      @NonNull TextView textViewHotelName, @NonNull TextView textViewPrice,
      @NonNull TextView textViewRating, @NonNull TextView textViewTotalSpace,
      @NonNull TextView textViewType) {
    this.rootView = rootView;
    this.imageViewNext = imageViewNext;
    this.imageViewSheild = imageViewSheild;
    this.imageViewpager = imageViewpager;
    this.layour = layour;
    this.linearLayoutCompat9 = linearLayoutCompat9;
    this.searchItem = searchItem;
    this.textViewFree = textViewFree;
    this.textViewHotel = textViewHotel;
    this.textViewHotelName = textViewHotelName;
    this.textViewPrice = textViewPrice;
    this.textViewRating = textViewRating;
    this.textViewTotalSpace = textViewTotalSpace;
    this.textViewType = textViewType;
  }

  @Override
  @NonNull
  public LinearLayoutCompat getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemSearchResultBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemSearchResultBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_search_result, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemSearchResultBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageViewNext;
      ImageView imageViewNext = rootView.findViewById(id);
      if (imageViewNext == null) {
        break missingId;
      }

      id = R.id.imageViewSheild;
      ImageView imageViewSheild = rootView.findViewById(id);
      if (imageViewSheild == null) {
        break missingId;
      }

      id = R.id.imageViewpager;
      ClickableViewPager imageViewpager = rootView.findViewById(id);
      if (imageViewpager == null) {
        break missingId;
      }

      id = R.id.layour;
      LinearLayoutCompat layour = rootView.findViewById(id);
      if (layour == null) {
        break missingId;
      }

      id = R.id.linearLayoutCompat9;
      LinearLayoutCompat linearLayoutCompat9 = rootView.findViewById(id);
      if (linearLayoutCompat9 == null) {
        break missingId;
      }

      id = R.id.searchItem;
      ConstraintLayout searchItem = rootView.findViewById(id);
      if (searchItem == null) {
        break missingId;
      }

      id = R.id.textViewFree;
      TextView textViewFree = rootView.findViewById(id);
      if (textViewFree == null) {
        break missingId;
      }

      id = R.id.textViewHotel;
      TextView textViewHotel = rootView.findViewById(id);
      if (textViewHotel == null) {
        break missingId;
      }

      id = R.id.textViewHotelName;
      TextView textViewHotelName = rootView.findViewById(id);
      if (textViewHotelName == null) {
        break missingId;
      }

      id = R.id.textViewPrice;
      TextView textViewPrice = rootView.findViewById(id);
      if (textViewPrice == null) {
        break missingId;
      }

      id = R.id.textViewRating;
      TextView textViewRating = rootView.findViewById(id);
      if (textViewRating == null) {
        break missingId;
      }

      id = R.id.textViewTotalSpace;
      TextView textViewTotalSpace = rootView.findViewById(id);
      if (textViewTotalSpace == null) {
        break missingId;
      }

      id = R.id.textViewType;
      TextView textViewType = rootView.findViewById(id);
      if (textViewType == null) {
        break missingId;
      }

      return new ItemSearchResultBinding((LinearLayoutCompat) rootView, imageViewNext,
          imageViewSheild, imageViewpager, layour, linearLayoutCompat9, searchItem, textViewFree,
          textViewHotel, textViewHotelName, textViewPrice, textViewRating, textViewTotalSpace,
          textViewType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
