// Generated by view binder compiler. Do not edit!
package com.droid.dorpee.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.droid.dorpee.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemTableLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView tvAmount;

  @NonNull
  public final TextView tvTime;

  @NonNull
  public final TextView tvType;

  private ItemTableLayoutBinding(@NonNull RelativeLayout rootView, @NonNull TextView tvAmount,
      @NonNull TextView tvTime, @NonNull TextView tvType) {
    this.rootView = rootView;
    this.tvAmount = tvAmount;
    this.tvTime = tvTime;
    this.tvType = tvType;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemTableLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemTableLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_table_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemTableLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tv_amount;
      TextView tvAmount = rootView.findViewById(id);
      if (tvAmount == null) {
        break missingId;
      }

      id = R.id.tv_time;
      TextView tvTime = rootView.findViewById(id);
      if (tvTime == null) {
        break missingId;
      }

      id = R.id.tv_type;
      TextView tvType = rootView.findViewById(id);
      if (tvType == null) {
        break missingId;
      }

      return new ItemTableLayoutBinding((RelativeLayout) rootView, tvAmount, tvTime, tvType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
