// Generated by view binder compiler. Do not edit!
package com.droid.dorpee.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.droid.dorpee.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MarkerInfoWindowBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView imageViewVenue;

  @NonNull
  public final ConstraintLayout infoWindow;

  @NonNull
  public final LinearLayoutCompat linearLayoutCompat9;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView textViewCity;

  @NonNull
  public final TextView textViewCreidt;

  @NonNull
  public final TextView textViewFrom;

  @NonNull
  public final TextView textViewVenueName;

  private MarkerInfoWindowBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView imageViewVenue, @NonNull ConstraintLayout infoWindow,
      @NonNull LinearLayoutCompat linearLayoutCompat9, @NonNull ProgressBar progressBar,
      @NonNull TextView textViewCity, @NonNull TextView textViewCreidt,
      @NonNull TextView textViewFrom, @NonNull TextView textViewVenueName) {
    this.rootView = rootView;
    this.imageViewVenue = imageViewVenue;
    this.infoWindow = infoWindow;
    this.linearLayoutCompat9 = linearLayoutCompat9;
    this.progressBar = progressBar;
    this.textViewCity = textViewCity;
    this.textViewCreidt = textViewCreidt;
    this.textViewFrom = textViewFrom;
    this.textViewVenueName = textViewVenueName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MarkerInfoWindowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MarkerInfoWindowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.marker_info_window, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MarkerInfoWindowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageViewVenue;
      ImageView imageViewVenue = rootView.findViewById(id);
      if (imageViewVenue == null) {
        break missingId;
      }

      ConstraintLayout infoWindow = (ConstraintLayout) rootView;

      id = R.id.linearLayoutCompat9;
      LinearLayoutCompat linearLayoutCompat9 = rootView.findViewById(id);
      if (linearLayoutCompat9 == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = rootView.findViewById(id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.textViewCity;
      TextView textViewCity = rootView.findViewById(id);
      if (textViewCity == null) {
        break missingId;
      }

      id = R.id.textViewCreidt;
      TextView textViewCreidt = rootView.findViewById(id);
      if (textViewCreidt == null) {
        break missingId;
      }

      id = R.id.textViewFrom;
      TextView textViewFrom = rootView.findViewById(id);
      if (textViewFrom == null) {
        break missingId;
      }

      id = R.id.textViewVenueName;
      TextView textViewVenueName = rootView.findViewById(id);
      if (textViewVenueName == null) {
        break missingId;
      }

      return new MarkerInfoWindowBinding((ConstraintLayout) rootView, imageViewVenue, infoWindow,
          linearLayoutCompat9, progressBar, textViewCity, textViewCreidt, textViewFrom,
          textViewVenueName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
