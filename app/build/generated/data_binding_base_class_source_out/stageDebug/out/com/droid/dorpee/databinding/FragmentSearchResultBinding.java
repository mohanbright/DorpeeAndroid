// Generated by view binder compiler. Do not edit!
package com.droid.dorpee.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.droid.dorpee.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSearchResultBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView backbtn;

  @NonNull
  public final Guideline guideline18;

  @NonNull
  public final Guideline guideline19;

  @NonNull
  public final ImageView imageViewMap;

  @NonNull
  public final TextView searchID;

  @NonNull
  public final MaterialCardView searchId;

  @NonNull
  public final RecyclerView searchRecycler;

  private FragmentSearchResultBinding(@NonNull ConstraintLayout rootView, @NonNull TextView backbtn,
      @NonNull Guideline guideline18, @NonNull Guideline guideline19,
      @NonNull ImageView imageViewMap, @NonNull TextView searchID,
      @NonNull MaterialCardView searchId, @NonNull RecyclerView searchRecycler) {
    this.rootView = rootView;
    this.backbtn = backbtn;
    this.guideline18 = guideline18;
    this.guideline19 = guideline19;
    this.imageViewMap = imageViewMap;
    this.searchID = searchID;
    this.searchId = searchId;
    this.searchRecycler = searchRecycler;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchResultBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchResultBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_search_result, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchResultBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backbtn;
      TextView backbtn = rootView.findViewById(id);
      if (backbtn == null) {
        break missingId;
      }

      id = R.id.guideline18;
      Guideline guideline18 = rootView.findViewById(id);
      if (guideline18 == null) {
        break missingId;
      }

      id = R.id.guideline19;
      Guideline guideline19 = rootView.findViewById(id);
      if (guideline19 == null) {
        break missingId;
      }

      id = R.id.imageViewMap;
      ImageView imageViewMap = rootView.findViewById(id);
      if (imageViewMap == null) {
        break missingId;
      }

      id = R.id.searchID;
      TextView searchID = rootView.findViewById(id);
      if (searchID == null) {
        break missingId;
      }

      id = R.id.searchId;
      MaterialCardView searchId = rootView.findViewById(id);
      if (searchId == null) {
        break missingId;
      }

      id = R.id.searchRecycler;
      RecyclerView searchRecycler = rootView.findViewById(id);
      if (searchRecycler == null) {
        break missingId;
      }

      return new FragmentSearchResultBinding((ConstraintLayout) rootView, backbtn, guideline18,
          guideline19, imageViewMap, searchID, searchId, searchRecycler);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
