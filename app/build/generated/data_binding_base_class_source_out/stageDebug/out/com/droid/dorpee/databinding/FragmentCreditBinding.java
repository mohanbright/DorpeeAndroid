// Generated by view binder compiler. Do not edit!
package com.droid.dorpee.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.ContentLoadingProgressBar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.droid.dorpee.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.stripe.android.view.CardInputWidget;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCreditBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout addConstraint;

  @NonNull
  public final CoordinatorLayout alertView;

  @NonNull
  public final TextInputEditText amoutET;

  @NonNull
  public final CardInputWidget cardInputWidget;

  @NonNull
  public final Guideline guideline15;

  @NonNull
  public final Guideline guideline16;

  @NonNull
  public final Guideline guideline17;

  @NonNull
  public final ContentLoadingProgressBar loginLoader;

  @NonNull
  public final RecyclerView recyclerCards;

  @NonNull
  public final TextInputLayout textLayoutfirstName;

  @NonNull
  public final TextView textView7;

  @NonNull
  public final TextView tvTotal;

  private FragmentCreditBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout addConstraint, @NonNull CoordinatorLayout alertView,
      @NonNull TextInputEditText amoutET, @NonNull CardInputWidget cardInputWidget,
      @NonNull Guideline guideline15, @NonNull Guideline guideline16,
      @NonNull Guideline guideline17, @NonNull ContentLoadingProgressBar loginLoader,
      @NonNull RecyclerView recyclerCards, @NonNull TextInputLayout textLayoutfirstName,
      @NonNull TextView textView7, @NonNull TextView tvTotal) {
    this.rootView = rootView;
    this.addConstraint = addConstraint;
    this.alertView = alertView;
    this.amoutET = amoutET;
    this.cardInputWidget = cardInputWidget;
    this.guideline15 = guideline15;
    this.guideline16 = guideline16;
    this.guideline17 = guideline17;
    this.loginLoader = loginLoader;
    this.recyclerCards = recyclerCards;
    this.textLayoutfirstName = textLayoutfirstName;
    this.textView7 = textView7;
    this.tvTotal = tvTotal;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCreditBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCreditBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_credit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCreditBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addConstraint;
      ConstraintLayout addConstraint = rootView.findViewById(id);
      if (addConstraint == null) {
        break missingId;
      }

      id = R.id.alertView;
      CoordinatorLayout alertView = rootView.findViewById(id);
      if (alertView == null) {
        break missingId;
      }

      id = R.id.amoutET;
      TextInputEditText amoutET = rootView.findViewById(id);
      if (amoutET == null) {
        break missingId;
      }

      id = R.id.cardInputWidget;
      CardInputWidget cardInputWidget = rootView.findViewById(id);
      if (cardInputWidget == null) {
        break missingId;
      }

      id = R.id.guideline15;
      Guideline guideline15 = rootView.findViewById(id);
      if (guideline15 == null) {
        break missingId;
      }

      id = R.id.guideline16;
      Guideline guideline16 = rootView.findViewById(id);
      if (guideline16 == null) {
        break missingId;
      }

      id = R.id.guideline17;
      Guideline guideline17 = rootView.findViewById(id);
      if (guideline17 == null) {
        break missingId;
      }

      id = R.id.loginLoader;
      ContentLoadingProgressBar loginLoader = rootView.findViewById(id);
      if (loginLoader == null) {
        break missingId;
      }

      id = R.id.recyclerCards;
      RecyclerView recyclerCards = rootView.findViewById(id);
      if (recyclerCards == null) {
        break missingId;
      }

      id = R.id.textLayoutfirstName;
      TextInputLayout textLayoutfirstName = rootView.findViewById(id);
      if (textLayoutfirstName == null) {
        break missingId;
      }

      id = R.id.textView7;
      TextView textView7 = rootView.findViewById(id);
      if (textView7 == null) {
        break missingId;
      }

      id = R.id.tv_total;
      TextView tvTotal = rootView.findViewById(id);
      if (tvTotal == null) {
        break missingId;
      }

      return new FragmentCreditBinding((ConstraintLayout) rootView, addConstraint, alertView,
          amoutET, cardInputWidget, guideline15, guideline16, guideline17, loginLoader,
          recyclerCards, textLayoutfirstName, textView7, tvTotal);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
