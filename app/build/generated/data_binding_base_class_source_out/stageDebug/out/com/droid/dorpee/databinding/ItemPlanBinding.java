// Generated by view binder compiler. Do not edit!
package com.droid.dorpee.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.droid.dorpee.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPlanBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final Button buttonplan;

  @NonNull
  public final MaterialCardView card;

  @NonNull
  public final TextView textView34;

  @NonNull
  public final TextView textView36;

  @NonNull
  public final TextView textViewActive;

  @NonNull
  public final TextView textViewDescription;

  @NonNull
  public final TextView textViewFree;

  @NonNull
  public final TextView textViewIntro;

  @NonNull
  public final TextView textViewcredit;

  @NonNull
  public final TextView textViewprice;

  private ItemPlanBinding(@NonNull MaterialCardView rootView, @NonNull Button buttonplan,
      @NonNull MaterialCardView card, @NonNull TextView textView34, @NonNull TextView textView36,
      @NonNull TextView textViewActive, @NonNull TextView textViewDescription,
      @NonNull TextView textViewFree, @NonNull TextView textViewIntro,
      @NonNull TextView textViewcredit, @NonNull TextView textViewprice) {
    this.rootView = rootView;
    this.buttonplan = buttonplan;
    this.card = card;
    this.textView34 = textView34;
    this.textView36 = textView36;
    this.textViewActive = textViewActive;
    this.textViewDescription = textViewDescription;
    this.textViewFree = textViewFree;
    this.textViewIntro = textViewIntro;
    this.textViewcredit = textViewcredit;
    this.textViewprice = textViewprice;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPlanBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPlanBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_plan, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPlanBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonplan;
      Button buttonplan = rootView.findViewById(id);
      if (buttonplan == null) {
        break missingId;
      }

      MaterialCardView card = (MaterialCardView) rootView;

      id = R.id.textView34;
      TextView textView34 = rootView.findViewById(id);
      if (textView34 == null) {
        break missingId;
      }

      id = R.id.textView36;
      TextView textView36 = rootView.findViewById(id);
      if (textView36 == null) {
        break missingId;
      }

      id = R.id.textViewActive;
      TextView textViewActive = rootView.findViewById(id);
      if (textViewActive == null) {
        break missingId;
      }

      id = R.id.textViewDescription;
      TextView textViewDescription = rootView.findViewById(id);
      if (textViewDescription == null) {
        break missingId;
      }

      id = R.id.textViewFree;
      TextView textViewFree = rootView.findViewById(id);
      if (textViewFree == null) {
        break missingId;
      }

      id = R.id.textViewIntro;
      TextView textViewIntro = rootView.findViewById(id);
      if (textViewIntro == null) {
        break missingId;
      }

      id = R.id.textViewcredit;
      TextView textViewcredit = rootView.findViewById(id);
      if (textViewcredit == null) {
        break missingId;
      }

      id = R.id.textViewprice;
      TextView textViewprice = rootView.findViewById(id);
      if (textViewprice == null) {
        break missingId;
      }

      return new ItemPlanBinding((MaterialCardView) rootView, buttonplan, card, textView34,
          textView36, textViewActive, textViewDescription, textViewFree, textViewIntro,
          textViewcredit, textViewprice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
